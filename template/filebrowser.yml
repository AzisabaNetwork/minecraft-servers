apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser-<server>
  namespace: minecraft
spec:
  selector:
    matchLabels:
      app: filebrowser-<server>
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: filebrowser-<server>
    spec:
      containers:
      - name: filebrowser-<server>
        image: filebrowser/filebrowser
        volumeMounts:
        - mountPath: /database
          name: filebrowser-database
        - mountPath: /.filebrowser.json
          name: filebrowser-config
          subPath: ".filebrowser.json"
        - mountPath: /srv/some-data
          name: some-data
        resources:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            cpu: "100m"
            memory: "500Mi"
        ports:
        - containerPort: 80
      volumes:
      - name: filebrowser-database
        persistentVolumeClaim:
          claimName: filebrowser-<server>-database
      - name: filebrowser-config
        configMap:
          name: filebrowser-<server>-config
      - name: some-data
        persistentVolumeClaim:
          claimName: some-data-claim
      # priorityClassName: minecraft-other-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebrowser-<server>-config
data:
  .filebrowser.json: |
    {
      "port": 80,
      "baseURL": "",
      "address": "",
      "log": "stdout",
      "database": "/database/filebrowser.db",
      "root": "/srv"
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-<server>-database
spec:
  storageClassName: nfs-client
  accessModes:
  - "ReadWriteMany"
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: filebrowser-<server>-svc
spec:
  type: ClusterIP
  selector:
    app: filebrowser-<server>
  ports:
    - port: 80
      targetPort: 80
